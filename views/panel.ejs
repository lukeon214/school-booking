<head>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/variables.css">
  <link rel="stylesheet" href="/global.css">
  <link rel="stylesheet" href="/layout.css">
  <link rel="stylesheet" href="/panel.css">
  <link rel="stylesheet" href="/form-page-panel.css">
</head>
<div class="admin-fullpanel">
  <div class="admin-panel-header">
    <div>
      <h1 class="panel-title"><%= form.title %></h1>
      <div class="panel-link-group">
        <input id="formLink" class="panel-link" readonly value="http://localhost:3333/form/<%= form.id %>">
        <button class="panel-copy" onclick="copy()">Copy</button>
      </div>
    </div>
    <a href="/export/<%= form.id %>" class="panel-export-btn">â¬‡ Export to Excel</a>
  </div>
  <hr class="admin-panel-separator"/>

  <div class="admin-panel-body">
    <h1>Form preview</h1>
    <form method="POST" class="form-page">
      <div class="form-preview">
        <% fields.forEach(f => { %>
          <div class="form-field">
            <labell><%= f.label %>:</labell>
            <% if (f.type === 'text') { %>
              <input type="text" disabled placeholder="(text)" />
            <% } else if (f.type === 'textarea') { %>
              <textarea disabled placeholder="(long answer)"></textarea>
            <% } else if (f.type === 'number') { %>
              <input type="number" disabled placeholder="(number)" />
            <% } else if (f.type === 'radio' || f.type === 'checkbox' || f.type === 'dropdown') { 
              const options = JSON.parse(f.choices || '[]');
              options.forEach(opt => { %>
                <label>
                  <input type="<%= f.type === 'checkbox' ? 'checkbox' : (f.type === 'radio' ? 'radio' : 'checkbox') %>" disabled />
                  <%= opt %>
                </label>
            <% }) } %>
          </div>
        <% }) %>
      </div>
        <div id="analytics-root"
          style="display: flex;gap: 1.5rem;max-width: 100vw;margin-bottom: 2rem;flex-direction: column;flex-wrap: wrap;align-content: flex-end;">
       </div>
    </form>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  fetch(window.location.pathname + '/analytics')
    .then(r => r.json())
    .then(data => {
      const root = document.getElementById('analytics-root');
      let colorPalette = [
        "#4e79a7","#f28e2c","#e15759","#76b7b2","#59a14f",
        "#edc949","#af7aa1","#ff9da7","#9c755f","#bab0ab"
      ];

      // Card showing total submissions
      if (data.__total_responses__) {
        const totalCard = document.createElement('div');
        totalCard.className = "analytics-card";
        totalCard.innerHTML = `<h3>Total Responses</h3><p style="font-size:4em;font-weight:bold">${data.__total_responses__}</p>`;
        root.appendChild(totalCard);
      }
      

      for (const [label, stat] of Object.entries(data)) {
        // Only graph for radio/checkbox/dropdown
        if (!['radio', 'checkbox', 'dropdown'].includes(stat.type)) continue;

        const container = document.createElement('div');
        container.className = "analytics-card";
        const heading = document.createElement('h3');
        heading.textContent = label;
        container.appendChild(heading);

        const canvas = document.createElement('canvas');
        canvas.width = 210; canvas.height = 140;
        container.appendChild(canvas);
        let chartType = (stat.type === 'checkbox') ? 'bar' : 'pie';
        let options = {
          maintainAspectRatio: false,
          plugins: { legend: { position: 'bottom', labels: { boxWidth: 15 } } }
        };
        if (stat.type === 'checkbox') {
          options.indexAxis = 'y';
          options.plugins.legend.display = false;
        }
        new Chart(canvas, {
          type: chartType,
          data: {
            labels: Object.keys(stat.counts),
            datasets: [{
              data: Object.values(stat.counts),
              backgroundColor: colorPalette.slice(0, Object.keys(stat.counts).length)
            }]
          },
          options
        });
        root.appendChild(container);
      }
    });
});


function copy() {
  const input = document.getElementById('formLink');
  input.select();
  document.execCommand('copy');
  alert('Link copied!');
}
</script>

<h1 style="margin-top: 1.5rem;margin-bottom: 1.5rem;display: flex;justify-content: center;">Individual Responses</h1>
<% if (!responses.length) { %>
  <p>No responses submitted yet.</p>
<% } %>

<div class="response-list">
  <% responses.forEach((submission, index) => { %>
    <div class="card-response">
      <div class="card-response-email"><strong><%= submission.email %></strong></div>
      <div class="card-response-fields">
        <% submission.fields.forEach(f => { %>
          <div class="response-field-row">
            <span class="response-field-label"><%= f.label %></span>
            <span class="response-field-value"><%= f.value %></span>
          </div>
        <% }) %>
      </div>
    </div>
  <% }) %>
</div>