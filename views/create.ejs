<h1>Create a New Form</h1>

<form method="POST" action="/create" onsubmit="return handleSubmit()">
  <input name="title" placeholder="Form Title" required style="font-size: 1.2rem; padding: 0.6rem; width: 100%; margin-bottom: 1.5rem;">

  <label>Who can fill this form?</label><br>
  <select name="private">
    <option value="0">Anyone (Public)</option>
    <option value="1">Only logged-in users</option>
  </select><br><br>

  <h3>Fields</h3>
  <div id="fields-container" class="field-sortable"></div>
  <button type="button" onclick="addField()">âž• Add Field</button>
  <br><br>

  <input type="hidden" name="fieldsJSON" id="fieldsJSON">
  <button type="submit">âœ… Create Form</button>
</form>

<script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>

<script>
  let fields = [];

  function addField() {
    fields.push({
      label: '',
      type: 'text',
      required: false
    });
    renderFields();
  }

  function updateType(i, val) {
    fields[i].type = val;
    if (['radio', 'checkbox', 'dropdown'].includes(val)) {
      fields[i].choices = fields[i].choices || ['Option 1', 'Option 2'];
    } else {
      delete fields[i].choices;
    }
    renderFields();
  }

  function addChoice(i) {
    fields[i].choices = fields[i].choices || [];
    fields[i].choices.push('');
    renderFields();
  }

  function removeChoice(i, j) {
    fields[i].choices.splice(j, 1);
    renderFields();
  }

  function duplicateField(i) {
    const clone = JSON.parse(JSON.stringify(fields[i]));
    fields.splice(i + 1, 0, clone);
    renderFields();
  }

  function removeField(i) {
    fields.splice(i, 1);
    renderFields();
  }

  function handleSubmit() {
    document.getElementById('fieldsJSON').value = JSON.stringify(fields);
    return true;
  }

  function renderFields() {
      const container = document.getElementById('fields-container');
      container.innerHTML = '';

      fields.forEach((field, i) => {
        const wrapper = document.createElement('div');
        wrapper.className = 'card';
        wrapper.innerHTML = `
          <div class="card-drag">â˜° Drag</div>

          <input type="text" placeholder="Question" value="${field.label || ''}"
            oninput="fields[${i}].label = this.value"
            style="width: 100%; font-weight: 600; margin-bottom: 0.75rem;" />

          <select onchange="updateType(${i}, this.value)">
            <option value="text" ${field.type === 'text' ? 'selected' : ''}>Short Answer</option>
            <option value="textarea" ${field.type === 'textarea' ? 'selected' : ''}>Long Answer</option>
            <option value="radio" ${field.type === 'radio' ? 'selected' : ''}>Multiple Choice</option>
            <option value="checkbox" ${field.type === 'checkbox' ? 'selected' : ''}>Checkboxes</option>
            <option value="dropdown" ${field.type === 'dropdown' ? 'selected' : ''}>Dropdown</option>
            <option value="number" ${field.type === 'number' ? 'selected' : ''}>Number</option>
          </select>

          ${['radio', 'checkbox', 'dropdown'].includes(field.type) ? `
            <div id="choices-list-${i}">
              ${(field.choices || []).map((opt, j) => `
                <div class="form-option">
                  ${field.type === 'radio' ? '<input type="radio" disabled>' : '<input type="checkbox" disabled>'}
                  <input type="text" value="${opt}" placeholder="Option ${j + 1}" 
                    oninput="fields[${i}].choices[${j}] = this.value" />
                  <button type="button" onclick="removeChoice(${i}, ${j})" class="form-btn danger">ðŸ—‘</button>
                </div>`).join('')}
            </div>
            <button type="button" onclick="addChoice(${i})" class="form-btn">âž• Add Option</button>
          ` : ''}

          <div class="form-footer">
            <div class="toggle">
              <label>Required</label>
              <input type="checkbox" ${field.required ? 'checked' : ''} onchange="fields[${i}].required = this.checked">
            </div>

            ${field.type === 'checkbox' ? `
              <div class="toggle">
                <label>Multiple answers</label>
                <input type="checkbox" checked disabled>
              </div>
            ` : ''}

            <div>
              <button type="button" onclick="duplicateField(${i})" class="form-btn">ðŸ“„</button>
              <button type="button" onclick="removeField(${i})" class="form-btn danger">ðŸ—‘</button>
            </div>
            <div class="toggle">
              <label>Max responses</label>
              <input type="number" min="0" value="${field.maxResponses || ''}" 
                    oninput="fields[${i}].maxResponses = this.value ? parseInt(this.value) : null" />
            </div>
          </div>
        `;
        container.appendChild(wrapper);
      });

      if (!window.sortableInstance) {
        window.sortableInstance = Sortable.create(container, {
          animation: 150,
          handle: '.card-drag',
          onEnd: e => {
            const item = fields.splice(e.oldIndex, 1)[0];
            fields.splice(e.newIndex, 0, item);
            renderFields();
          }
        });
      }
    }
</script>